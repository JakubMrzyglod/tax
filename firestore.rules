rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // COMPANY

    match /companies/{ownerId} {
      allow read: if isOwner()
      allow write, update: if isOwner() && isValidCompany()

      function data () {
        return request.resource.data
      }

      function isOwner() {
        return request.auth.uid == ownerId
      }

      function hasValidCompanyKeys () {
        return data().keys().hasOnly(['taxId', 'name', 'city', 'address'])
      }


      function isValidCompany() {
        let docData = data();
        return hasValidCompanyKeys()
        && docData.taxId is string
        && docData.name is string
        && docData.city is string
        && docData.address is string
      }

        // SCHEDULES

        match /schedules/{scheduleId} {
          allow write, update: if isOwner() && isSheduleGropu();
          allow read, delete: if isOwner();

          function isSheduleGropu () {
            let docData = data();
            return hasValidSheduleKeys()
            && docData.name is string
          }

          function hasValidSheduleKeys () {
            return data().keys().hasOnly(['name'])
          }

          // INTERVALS
        
          match /intervals/{intervalId} {
            allow write, update: if isOwner() && isInterval();
            allow read: if isOwner();
          }

          function isInterval () {
            let docData = data();
            return docData.count is number
            && docData.week is number
            && docData.year is number
            && docData.workTime is number
            && docData.start is list
          }

          // WORKWEEKS

          match /workweeks/{year} {
            allow write, update, read: if isOwner();
          }
        }
    }
  }
}