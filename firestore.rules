rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /companies/{ownerId}/{allPaths=**} {
      function data () {
        return request.resource.data
      }

      function isOwner() {
        return request.auth.uid == ownerId
      }

      function hasValidCompanyKeys () {
        return data().keys().hasOnly(['taxId', 'name', 'city', 'address'])
      }

      function isValidCompany() {
        let docData = data();
        return hasValidCompanyKeys()
        && docData.taxId is string
        && docData.name is string
        && docData.city is string
        && docData.address is string
      }

      allow read: if isOwner()
      allow write, update: if isOwner() && isValidCompany()

      match /schedules/{scheduleId} {
        function hasValidSheduleKeys () {
          return data().keys().hasOnly(['name'])
        }

        function isSheduleGropu () {
          let docData = data();
          return hasValidSheduleKeys()
          && docData.name is string
        }

        allow write, update: if isOwner() && isSheduleGropu()


        match /months/{monthId} {
          allow write, update, read: if isOwner();
        }
      }
    }
  }
}